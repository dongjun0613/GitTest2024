+ Git, 깃
	- 형상 관리 도구
		** 형상 관리
		 SW(소프트웨어)의 모든 변경 사항들을 체계적으로 관리하고 변경이력을 추적하는 것
	
	- 프로젝트를 진행하면서 생성되는 작업물들 각각의 변경 이력을 기록 (버전 관리 시스템)
	- 개인의 작업물을 관리할 수 있음
	- 팀 단위의 작업물을 한 곳에 모아 관리할 수 있음
		-> 협업이 편리해짐
		-> 개인 작업을 하나의 최종 결과물로 합치기 편리
		
	- Git Tool 프로그램을 설치해 사용
		-> Eclipse에는 플러그인 형태로 Egit 프로그램이 있음
		-> 수업에서는 Egit을 사용

+ GitHub 사이트
	- 원격 저장소(Remote Repository) 역할을 담당해주는 사이트
		** 로컬 저장소(Local Repository)
			개발자 개인 PC에 설치된 Git과 연동된 작업 폴더
			-> 우리는 Eclipse와 연동
			
+ GIT 기본 용어
	- stage,	로컬 저장소에 변경이력을 인덱스로 설정하는 작업
	- index,	commit 하기위해 준비된 작업(commit 후보 파일)
	- commit,	로컬 저장소에 변경이력을 기록하는 작업(Commit을 수행할 때마다 Commit ID가 부여됨)
	- history,	Commit ID의 변결 사항을 추적하는 것
	
	- HEAD,		현재 작업중인 상태 (Commit ID로 설정할 수 있음)
	- PUSH,		로컬 저장소의 히스토리를 원격 저장소로 업로드하는 작업
	- FETCH,	원격 저장소의 이력을 로컬 저장소로 다운로드 하는 작업
	- MERGE,	두 가지 이상의 이력을 하나로 합치는 작업
				(** 로컬 저장소에서 FETCH한 작업을  개인 작업 공간으로 MERGE)
				(** 원격 저장소에서 개개인이 PUSH한 작업을 MERGE)
	- PULL,		원격 저장소에서 FETCH해서 로컬 저장소에 MERGE하는 작업 (FETCH + MERGE)